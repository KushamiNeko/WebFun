[{"/home/neko/programming_projects/tools/javascript/happy/app/src/index.js":"1","/home/neko/programming_projects/tools/javascript/happy/app/src/App.js":"2","/home/neko/programming_projects/tools/javascript/happy/app/src/reportWebVitals.js":"3","/home/neko/programming_projects/tools/javascript/happy/app/src/styles/layout.js":"4","/home/neko/programming_projects/tools/javascript/happy/app/src/styles/typography.js":"5","/home/neko/programming_projects/tools/javascript/happy/app/src/components/navbar.js":"6","/home/neko/programming_projects/tools/javascript/happy/app/src/styles/shadows.js":"7","/home/neko/programming_projects/tools/javascript/happy/app/src/view/practice.js":"8","/home/neko/programming_projects/tools/javascript/happy/app/src/styles/common.js":"9","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/common.js":"10","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/labelInput.js":"11","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/checkButton.js":"12","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/button.js":"13","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/separator.js":"14","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/tableSet.js":"15","/home/neko/programming_projects/tools/javascript/happy/app/src/components/sidebar.js":"16","/home/neko/programming_projects/tools/javascript/happy/app/src/components/modal.js":"17","/home/neko/programming_projects/tools/javascript/happy/app/src/components/chartInputs.js":"18","/home/neko/programming_projects/tools/javascript/happy/app/src/components/chartCanvas.js":"19","/home/neko/programming_projects/tools/javascript/happy/app/src/store.js":"20","/home/neko/programming_projects/tools/javascript/happy/app/src/reducers/index.js":"21","/home/neko/programming_projects/tools/javascript/happy/app/src/reducers/symbolsReducer.js":"22","/home/neko/programming_projects/tools/javascript/happy/app/src/reducers/chartReducer.js":"23","/home/neko/programming_projects/tools/javascript/happy/app/src/actions/chartActions.js":"24"},{"size":500,"mtime":1608577493545,"results":"25","hashOfConfig":"26"},{"size":319,"mtime":1608749228978,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1608577493545,"results":"28","hashOfConfig":"26"},{"size":5949,"mtime":1608589590547,"results":"29","hashOfConfig":"26"},{"size":3506,"mtime":1608590045003,"results":"30","hashOfConfig":"26"},{"size":1035,"mtime":1608591090903,"results":"31","hashOfConfig":"26"},{"size":1458,"mtime":1608589583504,"results":"32","hashOfConfig":"26"},{"size":857,"mtime":1608686334105,"results":"33","hashOfConfig":"26"},{"size":729,"mtime":1608690851494,"results":"34","hashOfConfig":"26"},{"size":225,"mtime":1608597603125,"results":"35","hashOfConfig":"26"},{"size":2199,"mtime":1608747189270,"results":"36","hashOfConfig":"26"},{"size":1104,"mtime":1608689673541,"results":"37","hashOfConfig":"26"},{"size":674,"mtime":1608648828007,"results":"38","hashOfConfig":"26"},{"size":265,"mtime":1608648888600,"results":"39","hashOfConfig":"26"},{"size":2358,"mtime":1608753465781,"results":"40","hashOfConfig":"26"},{"size":413,"mtime":1608662051246,"results":"41","hashOfConfig":"26"},{"size":745,"mtime":1608685652349,"results":"42","hashOfConfig":"26"},{"size":7986,"mtime":1608771994344,"results":"43","hashOfConfig":"26"},{"size":10880,"mtime":1608771154684,"results":"44","hashOfConfig":"26"},{"size":413,"mtime":1608770387630,"results":"45","hashOfConfig":"26"},{"size":219,"mtime":1608770509785,"results":"46","hashOfConfig":"26"},{"size":1362,"mtime":1608750127072,"results":"47","hashOfConfig":"26"},{"size":2155,"mtime":1608771795646,"results":"48","hashOfConfig":"26"},{"size":7040,"mtime":1608772016551,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1n8fl57",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"/home/neko/programming_projects/tools/javascript/happy/app/src/index.js",[],["107","108"],"/home/neko/programming_projects/tools/javascript/happy/app/src/App.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/reportWebVitals.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/styles/layout.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/styles/typography.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/navbar.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/styles/shadows.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/view/practice.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/styles/common.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/common.js",[],["109","110"],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/labelInput.js",["111","112"],"import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { fontBody1 } from \"../../styles/typography\";\nimport { layoutVertical, layoutAroundJustified } from \"../../styles/layout\";\n\nimport { willChange } from \"../../styles/common\";\n\nimport { horizontalMargin, borderOutline } from \"./common\";\n\nconst Container = styled.div`\n  ${fontBody1}\n  ${layoutVertical}\n  ${layoutAroundJustified}\n  margin-top: 0.1em;\n  margin-bottom: 0.1em;\n`;\n\nconst Label = styled.span`\n  ${fontBody1}\n  ${horizontalMargin}\n  color: white;\n  margin-bottom: 0.1em;\n`;\n\nconst Input = styled.input.attrs((props) => ({\n  type: \"text\",\n}))`\n  ${fontBody1}\n  ${horizontalMargin}\n  ${borderOutline}\n\n  color: white;\n\n  background-color: ${(props) =>\n    props.error ? \"var(--paper-red-900)\" : \"var(--paper-blue-grey-400)\"};\n\n  padding-left: 0.25em;\n  padding-right: 0.25em;\n\n  ${willChange(\"color\", \"0.1s\")}\n  ${willChange(\"background-color\", \"0.1s\")}\n\n  :focus {\n    color: ${(props) => (props.error ? \"white\" : \"black\")};\n    background-color: ${(props) =>\n      props.error ? \"var(--paper-red-900)\" : \"var(--paper-grey-200)\"};\n  }\n`;\n\nfunction LabelInput(props) {\n  const [value, setValue] = useState(props.value);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    console.log(\"input effect\");\n    checkError(props.value);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"input effect\");\n    if (props.onChange) {\n      props.onChange(value);\n    }\n\n    if (props.onError) {\n      props.onError(error);\n    }\n  }, [value, error]);\n\n  function checkError(value) {\n    if (props.regex) {\n      const regex = RegExp(props.regex);\n\n      if (!regex.test(value)) {\n        setError(true);\n      } else {\n        if (error) {\n          setError(false);\n        }\n      }\n    }\n  }\n\n  function onChange(e) {\n    checkError(e.target.value);\n    setValue(e.target.value);\n  }\n\n  return (\n    <Container>\n      <Label>{props.label}</Label>\n      <Input\n        value={value}\n        onFocus={props.onFocus}\n        onBlur={props.onBlur}\n        onKeyDown={props.onKeyDown}\n        onChange={onChange}\n        error={error}\n      />\n    </Container>\n  );\n}\n\nexport default LabelInput;\n","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/checkButton.js",["113","114","115","116"],"import { useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { fontButton } from \"../../styles/typography\";\nimport { willChange } from \"../../styles/common\";\nimport { horizontalMargin, borderOutline } from \"./common\";\n\nimport Button from \"./button\";\n\nconst ActivateButton = styled(Button)`\n  color: ${(props) => (props.activated ? \"black\" : \"white\")};\n\n  background-color: ${(props) =>\n    props.activated ? \"var(--paper-yellow-600)\" : \"var(--paper-blue-grey-700)\"};\n\n  :focus {\n    background-color: ${(props) =>\n      props.activated ? \"var(--paper-yellow-800)\" : \"var(--paper-grey-500)\"};\n  }\n\n  :hover {\n    background-color: ${(props) =>\n      props.activated ? \"var(--paper-yellow-300)\" : \"var(--paper-grey-500)\"};\n  }\n`;\n\nfunction CheckButton(props) {\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <ActivateButton\n      activated={checked}\n      onClick={(e) => {\n        setChecked(!checked);\n        if (props.onClick) {\n          props.onClick(e);\n        }\n      }}\n    >\n      {props.children}\n    </ActivateButton>\n  );\n}\n\nexport default CheckButton;\n","/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/button.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/separator.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/inputs/tableSet.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/sidebar.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/modal.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/components/chartInputs.js",["117"],"import React, { useState, useRef, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport LabelInput from \"./inputs/labelInput\";\nimport CheckButton from \"./inputs/checkButton\";\nimport Button from \"./inputs/button\";\nimport Separator from \"./inputs/separator\";\nimport TableSet from \"./inputs/tableSet\";\n\nimport SideBar from \"./sidebar\";\n\nimport { chartSetSymbol, chartSetInputs } from \"../actions/chartActions\";\n\nconst now = new Date();\n\nfunction ChartInputs(props) {\n  const [state, setState] = useState({\n    currentSetIndex: 0,\n    currentSetItems: Object.values(props.symbols)[0],\n    selectedItemIndex: 0,\n  });\n\n  const inputs = useRef({\n    date: \"\",\n    freq: \"\",\n    book: \"\",\n  });\n\n  const errors = useRef({\n    date: false,\n    freq: false,\n    book: false,\n  });\n\n  const focused = useRef({\n    date: false,\n    freq: false,\n    book: false,\n  });\n\n  const keyStroke = useRef(\"\");\n\n  //  function makeInputsRequest(e) {\n  //    if (e === null || e.which !== 13) {\n  //      return;\n  //    }\n  //\n  //    // if (state.symbolID === null) {\n  //    //   return;\n  //    // }\n  //\n  //    // if (state.error.date || state.error.freq || state.error.book) {\n  //    //   return;\n  //    // }\n  //    if (error.date || error.frequency || error.book) {\n  //      return;\n  //    }\n  //\n  //    //chartRequest();\n  //\n  //    // inputsRequest(\n  //    //   dateRef.current.value,\n  //    //   state.symbols[state.symbolID],\n  //    //   freqRef.current.value,\n  //    //   bookRef.current.value\n  //    // );\n  //  }\n\n  function changeSet(index) {\n    let newIndex = state.currentSetIndex + index;\n    let finalIndex = Object.keys(props.symbols).length - 1;\n\n    if (newIndex < 0) {\n      newIndex = finalIndex;\n    }\n\n    if (newIndex > finalIndex) {\n      newIndex = 0;\n    }\n\n    setState({\n      ...state,\n      selectedItemIndex: 0,\n      currentSetIndex: newIndex,\n      currentSetItems: Object.values(props.symbols)[newIndex],\n    });\n  }\n\n  function setSelectedIndex(index) {\n    if (index < 0 || index >= state.currentSetItems.length) {\n      return;\n    }\n\n    if (props.chart.isWorking) {\n      return;\n    }\n\n    setState({\n      ...state,\n      selectedItemIndex: index,\n    });\n\n    props.chartSetSymbol(state.currentSetItems[index]);\n  }\n\n  function keydownHandler(e) {\n    if (e === null) {\n      return;\n    }\n\n    if (props.chart.isWorking) {\n      return;\n    }\n\n    if (\n      //variables.current.focused.symbol ||\n      //variables.current.focused.date ||\n      //variables.current.focused.freq ||\n      //variables.current.focused.book\n      focused.current.date ||\n      focused.current.freq ||\n      focused.current.book\n    ) {\n      return;\n    }\n\n    if (e.which === 38 || e.which === 40) {\n      if (state.selectedItemIndex === null) {\n        return;\n      }\n\n      let index;\n      if (e.which === 38) {\n        // index = state.selectedItemIndex - 1;\n        index = state.selectedItemIndex - 1;\n        if (index < 0) {\n          // index = state.symbols.length - 1;\n          index = state.currentSetItems.length - 1;\n        }\n      } else if (e.which === 40) {\n        index = state.selectedItemIndex + 1;\n        //index = selectedItemIndex + 1;\n        if (index > state.currentSetItems.length - 1) {\n          index = 0;\n        }\n      }\n\n      setSelectedIndex(index);\n    } else {\n      if (e.which === 37) {\n        //backward();\n      } else if (e.which === 39) {\n        //forward();\n      } else if (e.which >= 48 && e.which <= 57) {\n        // number keys 48: 0, 49-57 : 1-9\n        //variables.current.key += (e.which - 48).toString();\n        keyStroke.current += (e.which - 48).toString();\n\n        setTimeout(() => {\n          //if (variables.current.key !== \"\") {\n          if (keyStroke.current !== \"\") {\n            //setSelectedIndex(parseInt(variables.current.key) - 1);\n            setSelectedIndex(parseInt(keyStroke.current) - 1);\n          }\n\n          //variables.current.key = \"\";\n          keyStroke.current = \"\";\n        }, 250);\n      } else {\n        //console.log(e.which);\n        switch (e.which) {\n          case 72:\n            // h\n            //freqRequest(\"h\");\n            //setFrequency(\"h\", true);\n            // chartRequest();\n            break;\n          case 68:\n            // d\n            // freqRequest(\"d\");\n            //setFrequency(\"d\", true);\n            // chartRequest();\n            break;\n          case 87:\n            // w\n            // freqRequest(\"w\");\n            //setFrequency(\"w\", true);\n            // chartRequest();\n            break;\n          case 77:\n            // m\n            //freqRequest(\"m\");\n            //setFrequency(\"m\", true);\n            // chartRequest();\n            break;\n          case 13:\n            // enter\n            //toggleFullScreen();\n            break;\n          case 32:\n            // space\n            //if (_modal.isOpen) {\n            //_modal.close();\n            //} else {\n            //_modal.open();\n            //}\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keydownHandler);\n    return () => window.removeEventListener(\"keydown\", keydownHandler);\n  });\n\n  useEffect(() => {\n    props.chartSetInputs(\n      state.currentSetItems[state.selectedItemIndex],\n      inputs.current.date,\n      inputs.current.freq,\n      inputs.current.book\n    );\n  }, []);\n\n  console.log(\"chart inputs\");\n\n  return (\n    <SideBar>\n      <TableSet\n        label=\"Symbols\"\n        set={Object.keys(props.symbols)[state.currentSetIndex]}\n        items={state.currentSetItems}\n        selected={state.selectedItemIndex}\n        onChangeSet={changeSet}\n        onSelect={(index) => {\n          setSelectedIndex(index);\n        }}\n        showNumber\n      />\n\n      <Separator />\n\n      <Button> random date </Button>\n\n      <LabelInput\n        label=\"Date\"\n        regex=\"^[0-9]{8}$\"\n        value={`${now.getFullYear()}${(now.getMonth() + 1)\n          .toString()\n          .padStart(2, \"0\")}${now.getDate().toString().padStart(2, \"0\")}`}\n        onFocus={() => (focused.current.date = true)}\n        onBlur={() => (focused.current.date = false)}\n        onKeyDown={() => {}}\n        onChange={(value) => {\n          inputs.current.date = value;\n        }}\n        onError={(err) => {\n          errors.current.date = err;\n        }}\n      />\n\n      <LabelInput\n        label=\"Frequency\"\n        regex=\"^[dw]{1}$\"\n        value=\"d\"\n        onFocus={() => (focused.current.freq = true)}\n        onBlur={() => (focused.current.freq = false)}\n        onKeyDown={() => {}}\n        onChange={(value) => {\n          inputs.current.freq = value;\n        }}\n        onError={(err) => {\n          errors.current.freq = err;\n        }}\n      />\n\n      <LabelInput\n        label=\"Book\"\n        regex=\"^[0-9a-zA-Z]+$\"\n        value=\"01\"\n        onFocus={() => (focused.current.book = true)}\n        onBlur={() => (focused.current.book = false)}\n        onKeyDown={() => {}}\n        onChange={(value) => {\n          inputs.current.book = value;\n        }}\n        onError={(err) => {\n          errors.current.book = err;\n        }}\n      />\n\n      <CheckButton> show records </CheckButton>\n\n      <Separator />\n\n      <Button\n        onClick={() => {\n          if (\n            errors.current.date ||\n            errors.current.freq ||\n            errors.current.book\n          ) {\n            console.error(\"inputs error\");\n          } else {\n            props.chartSetInputs(\n              state.currentSetItems[state.selectedItemIndex],\n              inputs.current.date,\n              inputs.current.freq,\n              inputs.current.book\n            );\n          }\n        }}\n      >\n        ok\n      </Button>\n    </SideBar>\n  );\n}\n\nconst mapStatetoProps = (state) => ({\n  symbols: state.symbols,\n  chart: state.chart,\n});\n\n//export default ChartInputs;\nexport default connect(mapStatetoProps, { chartSetSymbol, chartSetInputs })(\n  ChartInputs\n);\n","/home/neko/programming_projects/tools/javascript/happy/app/src/components/chartCanvas.js",["118","119","120","121","122"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { chartRequest } from \"../actions/chartActions\";\n\nimport styled from \"styled-components\";\n\nimport { fontSubhead, fontBody1 } from \"../styles/typography\";\nimport { layout, layoutFlex10 } from \"../styles/layout\";\nimport { noselect, willChange, transitionLiteral } from \"../styles/common\";\n\nconst Container = styled.div`\n  ${layoutFlex10}\n`;\n\nconst ChartContainer = styled.div`\n  ${layout}\n  ${noselect}\n  ${willChange(\"opacity\", \"0.075s\")}\n\n  color: red;\n`;\n\nconst ChartInfo = styled.div`\n  ${fontSubhead}\n  @media (max-width: var(--media-max-width)) {\n    ${fontBody1}\n  }\n\n  ${noselect}\n\n  ${transitionLiteral(\"top 0.1s ease, left 0.1s ease\")}\n\n  display: ${(props) => (props.isMoving ? \"block\" : \"none\")};\n\n  white-space: pre;\n  position: absolute;\n  z-index: 2;\n  color: white;\n  opacity: var(--dark-primary-opacity);\n  background-color: rgba(255, 255, 255, 0);\n`;\n\nconst ChartCover = styled.canvas`\n  ${noselect}\n  position: absolute;\n  top: auto;\n\n  z-index: 1;\n`;\n\nconst ChartImage = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nconst coverColor = \"rgba(0, 0, 0, 0.8)\";\nconst inspectColor = \"rgba(255, 255, 255, 0.8)\";\nconst anchorColor = \"rgba(255, 255, 255, 0.5)\";\n\nfunction ChartCanvas(props) {\n  //const { inspectRequest, imageSrc } = useContext(ChartContext);\n\n  const [state, setState] = useState({\n    isMoving: false,\n  });\n\n  const infoRef = useRef(null);\n\n  const inspectRef = useRef(null);\n  const coverRef = useRef(null);\n\n  const imageRef = useRef(null);\n\n  const drawCover = useRef({\n    left: false,\n    right: false,\n    both: false,\n  });\n\n  const drawAnchor = useRef({\n    active: false,\n    anchorX: 0,\n    anchorY: 0,\n  });\n\n  //const variables = useRef({\n  //left: false,\n  //right: false,\n  //both: false,\n  //calc: false,\n  //calcX: 0,\n  //calcY: 0,\n  //});\n\n  function eventXOffset(e) {\n    return e.clientX - imageRef.current.offsetLeft;\n  }\n\n  function eventYOffset(e) {\n    return e.clientY - imageRef.current.offsetTop;\n  }\n\n  function initCanvasSize() {\n    //inspectRef.current.width = Math.floor(imageRef.current.clientWidth) - 1;\n    //inspectRef.current.height = Math.floor(imageRef.current.clientHeight) - 1;\n\n    //coverRef.current.width = Math.floor(imageRef.current.clientWidth) - 1;\n    //coverRef.current.height = Math.floor(imageRef.current.clientHeight) - 1;\n\n    inspectRef.current.width = imageRef.current.clientWidth;\n    inspectRef.current.height = imageRef.current.clientHeight;\n\n    coverRef.current.width = imageRef.current.clientWidth;\n    coverRef.current.height = imageRef.current.clientHeight;\n  }\n\n  function singleCoverR(e) {\n    const cctx = coverRef.current.getContext(\"2d\");\n\n    cctx.clearRect(0, 0, coverRef.current.width, coverRef.current.height);\n    cctx.fillStyle = coverColor;\n\n    cctx.fillRect(\n      eventXOffset(e),\n      0,\n      coverRef.current.width - eventXOffset(e),\n      coverRef.current.height\n    );\n  }\n\n  function singleCoverL(e) {\n    const cctx = coverRef.current.getContext(\"2d\");\n\n    cctx.clearRect(0, 0, coverRef.current.width, coverRef.current.height);\n    cctx.fillStyle = coverColor;\n\n    cctx.fillRect(0, 0, eventXOffset(e), coverRef.current.height);\n  }\n\n  function doubleCover(e) {\n    const cctx = coverRef.current.getContext(\"2d\");\n\n    cctx.clearRect(0, 0, coverRef.current.width, coverRef.current.height);\n    cctx.fillStyle = coverColor;\n\n    //if (eventXOffset(e) >= variables.current.calcX) {\n    //cctx.fillRect(0, 0, variables.current.calcX, coverRef.current.height);\n\n    if (eventXOffset(e) >= drawAnchor.current.anchorX) {\n      cctx.fillRect(0, 0, drawAnchor.current.anchorX, coverRef.current.height);\n\n      cctx.fillRect(\n        eventXOffset(e),\n        0,\n        coverRef.current.width - eventXOffset(e),\n        coverRef.current.height\n      );\n    } else {\n      cctx.fillRect(0, 0, eventXOffset(e), coverRef.current.height);\n\n      cctx.fillRect(\n        //variables.current.calcX,\n        drawAnchor.current.anchorX,\n        0,\n        //coverRef.current.width - variables.current.calcX,\n        coverRef.current.width - drawAnchor.current.anchorX,\n        coverRef.current.height\n      );\n    }\n  }\n\n  function inspectInfo(e) {\n    const x = Math.max(\n      Math.min(eventXOffset(e) / inspectRef.current.width, 1),\n      0\n    );\n\n    const y = Math.max(\n      Math.min(\n        (inspectRef.current.height - eventYOffset(e)) /\n          inspectRef.current.height,\n        1\n      ),\n      0\n    );\n\n    //if (variables.current.calc) {\n    if (drawAnchor.current.active) {\n      const ax = Math.max(\n        //Math.min(variables.current.calcX / inspectRef.current.width, 1),\n        Math.min(drawAnchor.current.anchorX / inspectRef.current.width, 1),\n        0\n      );\n\n      const ay = Math.max(\n        Math.min(\n          //(inspectRef.current.height - variables.current.calcY) /\n          (inspectRef.current.height - drawAnchor.current.anchorY) /\n            inspectRef.current.height,\n          1\n        ),\n        0\n      );\n\n      //inspectRequest(\n      //(data) => {\n      //infoRef.current.innerHTML = data;\n      //},\n      //x,\n      //y,\n      //ax,\n      //ay\n      //);\n    } else {\n      //inspectRequest(\n      //(data) => {\n      //infoRef.current.innerHTML = data;\n      //},\n      //x,\n      //y\n      //);\n    }\n\n    const offset = 20;\n\n    let l;\n    if (eventXOffset(e) > inspectRef.current.width / 2) {\n      l = `${e.clientX - infoRef.current.clientWidth - offset}px`;\n    } else {\n      l = `${e.clientX + offset}px`;\n    }\n\n    infoRef.current.style.left = l;\n\n    let t;\n    if (eventYOffset(e) > inspectRef.current.height / 2) {\n      t = `${e.clientY - infoRef.current.offsetHeight - offset}px`;\n    } else {\n      t = `${e.clientY + offset}px`;\n    }\n\n    infoRef.current.style.top = t;\n  }\n\n  function inspect(e) {\n    const ictx = inspectRef.current.getContext(\"2d\");\n\n    ictx.clearRect(0, 0, inspectRef.current.width, inspectRef.current.height);\n    ictx.strokeStyle = inspectColor;\n\n    ictx.beginPath();\n    ictx.moveTo(eventXOffset(e), 0);\n\n    ictx.lineTo(eventXOffset(e), inspectRef.current.height);\n\n    ictx.stroke();\n    ictx.closePath();\n\n    ictx.beginPath();\n\n    ictx.moveTo(0, eventYOffset(e));\n\n    ictx.lineTo(inspectRef.current.width, eventYOffset(e));\n\n    ictx.stroke();\n    ictx.closePath();\n  }\n\n  function calcAnchor() {\n    const ictx = inspectRef.current.getContext(\"2d\");\n\n    ictx.strokeStyle = anchorColor;\n\n    ictx.beginPath();\n    //ictx.moveTo(variables.current.calcX, 0);\n    ictx.moveTo(drawAnchor.current.anchorX, 0);\n\n    //ictx.lineTo(variables.current.calcX, inspectRef.current.height);\n    ictx.lineTo(drawAnchor.current.anchorX, inspectRef.current.height);\n\n    ictx.stroke();\n    ictx.closePath();\n\n    ictx.beginPath();\n\n    //ictx.moveTo(0, variables.current.calcY);\n    ictx.moveTo(0, drawAnchor.current.anchorY);\n\n    //ictx.lineTo(inspectRef.current.width, variables.current.calcY);\n    ictx.lineTo(inspectRef.current.width, drawAnchor.current.anchorY);\n\n    ictx.stroke();\n    ictx.closePath();\n  }\n\n  function handlerUp() {\n    //variables.current.left = false;\n    //variables.current.right = false;\n    //variables.current.both = false;\n    //variables.current.calc = false;\n\n    drawCover.current.left = false;\n    drawCover.current.right = false;\n    drawCover.current.both = false;\n\n    drawAnchor.current.active = false;\n  }\n\n  function handlerMove(e) {\n    if (!state.isMoving) {\n      setState({ ...state, isMoving: true });\n    }\n\n    inspectInfo(e);\n\n    //if (variables.current.both) {\n    //doubleCover(e);\n    //} else if (variables.current.left) {\n    //singleCoverL(e);\n    //} else if (variables.current.right) {\n    //singleCoverR(e);\n    //}\n\n    if (drawCover.current.both) {\n      doubleCover(e);\n    } else if (drawCover.current.left) {\n      singleCoverL(e);\n    } else if (drawCover.current.right) {\n      singleCoverR(e);\n    }\n\n    inspect(e);\n\n    //if (variables.current.calc) {\n    //calcAnchor(e);\n    //}\n\n    if (drawAnchor.current.active) {\n      calcAnchor(e);\n    }\n  }\n\n  function handlerDown(e) {\n    const ictx = inspectRef.current.getContext(\"2d\");\n    const cctx = coverRef.current.getContext(\"2d\");\n\n    ictx.clearRect(0, 0, inspectRef.current.width, inspectRef.current.height);\n    cctx.clearRect(0, 0, inspectRef.current.width, inspectRef.current.height);\n\n    //variables.current.left = false;\n    //variables.current.right = false;\n    //variables.current.both = false;\n\n    drawCover.current.left = false;\n    drawCover.current.right = false;\n    drawCover.current.both = false;\n\n    if (e.ctrlKey) {\n      //variables.current.left = true;\n      drawCover.current.left = true;\n    } else if (e.shiftKey) {\n      //variables.current.right = true;\n      drawCover.current.right = true;\n    } else if (e.altKey) {\n      //variables.current.both = true;\n      drawCover.current.both = true;\n    }\n\n    //variables.current.calc = true;\n    //variables.current.calcX = eventXOffset(e);\n    //variables.current.calcY = eventYOffset(e);\n\n    drawAnchor.current.active = true;\n    drawAnchor.current.anchorX = eventXOffset(e);\n    drawAnchor.current.anchorY = eventYOffset(e);\n\n    setState({\n      ...state,\n      isMoving: false,\n    });\n  }\n\n  useEffect(() => {\n    const imgLoaded = () => {\n      initCanvasSize();\n    };\n\n    const imgRef = imageRef.current;\n\n    imgRef.addEventListener(\"load\", imgLoaded);\n\n    window.addEventListener(\"resize\", () => {\n      initCanvasSize();\n    });\n\n    window.addEventListener(\"mouseup\", handlerUp);\n    window.addEventListener(\"mousemove\", handlerMove);\n    window.addEventListener(\"mousedown\", handlerDown);\n\n    return () => {\n      imgRef.removeEventListener(\"load\", imgLoaded);\n      window.removeEventListener(\"mouseup\", handlerUp);\n      window.removeEventListener(\"mousemove\", handlerMove);\n      window.removeEventListener(\"mousedown\", handlerDown);\n    };\n  });\n\n  useEffect(() => {\n    console.log(\"useEffect chart request\");\n    props.chartRequest();\n  }, [\n    props.chart.func,\n    props.chart.symbol,\n    props.chart.date,\n    props.chart.freq,\n    props.chart.book,\n    props.chart.records,\n    props.chart.x,\n    props.chart.y,\n    props.chart.ax,\n    props.chart.ay,\n    props.chart.parameters,\n  ]);\n\n  return (\n    <>\n      <ChartInfo ref={infoRef} isMoving={state.isMoving}>\n        tsetsetsetsetsettstset\n      </ChartInfo>\n      <Container>\n        <ChartContainer>\n          <ChartCover ref={inspectRef} />\n          <ChartCover ref={coverRef} />\n          <ChartImage ref={imageRef} src=\"test.jpg\" />\n        </ChartContainer>\n      </Container>\n    </>\n  );\n}\n\nconst mapStatetoProps = (state) => ({\n  symbols: state.symbols,\n  chart: state.chart,\n});\n\n//export default ChartCanvas;\nexport default connect(mapStatetoProps, { chartRequest })(ChartCanvas);\n","/home/neko/programming_projects/tools/javascript/happy/app/src/store.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/reducers/index.js",[],"/home/neko/programming_projects/tools/javascript/happy/app/src/reducers/symbolsReducer.js",["123"],"const initialState = {\n  Currencies: [\n    // \"USD\",\n    \"DXY\",\n    \"EURUSD\",\n    \"USDJPY\",\n    \"GBPUSD\",\n    \"AUDUSD\",\n    \"USDCAD\",\n    \"USDCHF\",\n    \"NZDUSD\",\n    \"BTCUSD\",\n    \"ETHUSD\",\n    \"XRPUSD\",\n    \"LTCUSD\",\n    //\"JPYUSD\",\n    //\"CADUSD\",\n    //\"CHFUSD\",\n    //\"EURJPY\",\n    //\"EURGBP\",\n    //\"EURAUD\",\n    //\"EURCAD\",\n    //\"EURCHF\",\n    //\"GBPJPY\",\n    //\"AUDJPY\",\n    //\"CADJPY\",\n    // \"NZDJPY\",\n    \"DX\",\n    \"E6\",\n    \"J6\",\n    \"B6\",\n    \"A6\",\n    \"D6\",\n    \"S6\",\n    \"N6\",\n  ],\n  \"Stock Indexes\": [\n    \"SPX\",\n    // \"SPXEW\",\n    \"VIX\",\n    \"ES\",\n    \"NDX\",\n    // \"NDXEW\",\n    \"VXN\",\n    \"NQ\",\n    // \"SML\",\n    // \"SMLEW\",\n    \"RUT\",\n    \"RVX\",\n    \"QR\",\n    \"DJI\",\n    \"YM\",\n    // \"VLE\",\n    // \"ZN\",\n    // \"HYG\",\n    \"NIKK\",\n    // \"TOPIX\",\n    \"JNIV\",\n    \"NP\",\n    // \"EZU\",\n    \"FX\",\n    \"VSTX\",\n    \"EEM\",\n    \"HSI\",\n    \"VHSI\",\n    \"FXI\",\n    \"VXFXI\",\n  ],\n  Bonds: [\n    \"ZN\",\n    \"ZF\",\n    \"ZT\",\n    \"ZB\",\n    \"GE\",\n    \"TJ\",\n    \"GG\",\n    \"JPST\",\n    \"NEAR\",\n    \"GSY\",\n    \"ICSH\",\n    \"SHV\",\n    \"USHY\",\n    //\"HYLB\",\n    \"HYG\",\n    \"JNK\",\n    \"EMB\",\n    \"LQD\",\n    \"MBB\",\n    \"SHY\",\n    \"IEF\",\n    \"IYR\",\n    \"REET\",\n    \"REM\",\n  ],\n  Commodities: [\n    \"GC\",\n    // \"GVZ\",\n    \"CL\",\n    // \"OVX\",\n  ],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","/home/neko/programming_projects/tools/javascript/happy/app/src/reducers/chartReducer.js",["124"],"import {\n  CHART_START_WORKING,\n  CHART_FINISH_WORKING,\n  CHART_SET_FUNCTION,\n  CHART_SYMBOL_REQUEST,\n  CHART_FREQUENCY_REQUEST,\n  CHART_RECORDS_REQUEST,\n  CHART_INPUTS_REQUEST,\n  CHART_RANDOM_DATE_REQUEST,\n  CHART_PARAMETERS_REQUEST,\n  CHART_INSPECT_REQUEST,\n} from \"../actions/chartActions\";\n\nconst initialState = {\n  image: \"\",\n  quote: {},\n\n  //url: \"\",\n\n  isWorking: false,\n\n  func: \"\",\n  symbol: \"\",\n  date: \"\",\n  freq: \"\",\n  book: \"\",\n  records: false,\n\n  x: null,\n  y: null,\n  ax: null,\n  ay: null,\n\n  parameters: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CHART_START_WORKING:\n      return {\n        ...state,\n        isWorking: true,\n      };\n\n    case CHART_FINISH_WORKING:\n      return {\n        ...state,\n        isWorking: false,\n      };\n\n    case CHART_SET_FUNCTION:\n      return {\n        ...state,\n        func: action.payload.func,\n      };\n\n    case CHART_SYMBOL_REQUEST:\n      return {\n        ...state,\n        func: action.payload.func,\n        symbol: action.payload.symbol,\n      };\n\n    case CHART_FREQUENCY_REQUEST:\n      return {\n        ...state,\n        func: action.payload.func,\n        freq: action.payload.freq,\n      };\n\n    case CHART_INPUTS_REQUEST:\n      return {\n        ...state,\n        func: action.payload.func,\n        symbol: action.payload.symbol,\n        date: action.payload.date,\n        freq: action.payload.freq,\n        book: action.payload.book,\n      };\n\n    case CHART_RECORDS_REQUEST:\n      return {\n        ...state,\n        func: action.payload.func,\n        records: action.payload.records,\n      };\n\n    case CHART_RANDOM_DATE_REQUEST:\n      return {\n        ...state,\n        func: action.payload.func,\n      };\n\n    case CHART_PARAMETERS_REQUEST:\n      return {\n        ...state,\n        func: action.payload.func,\n        parameters: action.payload.params,\n      };\n\n    case CHART_INSPECT_REQUEST:\n      return {\n        ...state,\n        func: action.payload.func,\n        x: action.payload.x,\n        y: action.payload.y,\n        ax: action.payload.ax,\n        ay: action.payload.ay,\n      };\n\n    default:\n      return state;\n  }\n}\n","/home/neko/programming_projects/tools/javascript/happy/app/src/actions/chartActions.js",["125","126"],"export const CHART_START_WORKING = \"chart_start_working\";\nexport const CHART_FINISH_WORKING = \"chart_finish_working\";\n\nexport const CHART_SET_FUNCTION = \"chart_set_function\";\n\nexport const CHART_SYMBOL_REQUEST = \"chart_symbol_request\";\nexport const CHART_FREQUENCY_REQUEST = \"chart_frequency_request\";\nexport const CHART_RECORDS_REQUEST = \"chart_records_request\";\nexport const CHART_INPUTS_REQUEST = \"chart_inputs_request\";\n\nexport const CHART_RANDOM_DATE_REQUEST = \"chart_random_date_request\";\n\nexport const CHART_PARAMETERS_REQUEST = \"chart_parameters_request\";\nexport const CHART_INSPECT_REQUEST = \"chart_inspect_request\";\n\nfunction getChartURL(state) {\n  // const origin = \"http://127.0.0.1:5000\";\n\n  const origin = `${window.location.protocol}//${window.location.hostname}:5000`;\n\n  let url = `${origin}/service/chart`;\n\n  const now = new Date();\n\n  url = `${url}?timestemp=${Math.round(now.getTime() / 1000)}`;\n\n  url = `${url}&symbol=${state.symbol}&frequency=${state.freq}&function=${state.func}&date=${state.date}`;\n  // url = `${url}&book=${state.book}&records=${state.records.toString()}`;\n  url = `${url}&book=${state.symbol.toUpperCase()}${\n    state.book\n  }&records=${state.records.toString()}`;\n\n  if (state.x != null && state.y != null) {\n    url = `${url}&x=${state.x}&y=${state.y}`;\n  }\n\n  if (state.ax != null && state.ay != null) {\n    url = `${url}&ax=${state.ax}&ay=${state.ay}`;\n  }\n\n  for (const [key, value] of Object.entries(state.parameters)) {\n    let v = value;\n    //v = parametersAdjustment(key, value);\n    url = `${url}&params_${key}=${v}`;\n\n    // url = `${url}&params_${key}=${value}`;\n  }\n\n  return url;\n}\n\n//_parametersAdjustment(key: string, value: any): any {\n//let volatility = [\n//\"vix\",\n//\"vxn\",\n//\"rvx\",\n//\"jniv\",\n//\"vstx\",\n//\"vhsi\",\n//\"vxfxi\",\n//\"ovx\",\n//\"gvz\",\n//];\n\n//if (volatility.includes(this._symbol)) {\n//let activated = [\"BollingerBands\"];\n//let deactivated = [\n//\"MovingAverages10\",\n//\"MovingAverages60\",\n//\"MovingAverages100\",\n//\"MovingAverages300\",\n//];\n\n//if (activated.includes(key)) {\n//return \"true\";\n//}\n\n//if (deactivated.includes(key)) {\n//return \"false\";\n//}\n//}\n\n//return value;\n//}\n\nexport function chartRequest() {\n  return function (dispatch, getState) {\n    if (getState().chart.isWorking) {\n      return;\n    }\n\n    console.log(\"dispatch working\");\n\n    dispatch({\n      type: CHART_START_WORKING,\n    });\n\n    const url = getChartURL(getState().chart);\n\n    console.log(\"chart request\");\n    console.log(url);\n\n    dispatch({\n      type: CHART_FINISH_WORKING,\n    });\n\n    return;\n    //this._url = url;\n\n    //const headers = new HttpHeaders().set(\n    //\"Content-Type\",\n    //\"text/plain; charset=utf-8\"\n    //);\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        if (Object.keys(data).includes(\"error\")) {\n          // console.error(`${data[\"error\"]}`);\n\n          console.error(data[\"error\"]);\n\n          dispatch({\n            type: CHART_FINISH_WORKING,\n          });\n\n          return;\n        }\n\n        console.log(data);\n\n        const src = `data:image/png;base64,${data[\"img\"]}`;\n\n        //this.image.next(src);\n        //this.quote.next(data);\n        //this._date = data[\"date\"];\n\n        //this.inputs.next({\n        //symbol: this._symbol,\n        //date: this._date,\n        //freq: this._freq,\n        //book: this._book,\n        //});\n\n        //this._completed();\n        dispatch({\n          type: CHART_FINISH_WORKING,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    //this._http.get(url).subscribe(\n    //(data: object) => {\n    //if (Object.keys(data).includes(\"error\")) {\n    //// console.error(`${data[\"error\"]}`);\n    //alert(`${data[\"error\"]}`);\n    //this._completed();\n    //return;\n    //}\n\n    //const src = `data:image/png;base64,${data[\"img\"]}`;\n    //this.image.next(src);\n    //this.quote.next(data);\n    //this._date = data[\"date\"];\n\n    //this.inputs.next({\n    //symbol: this._symbol,\n    //date: this._date,\n    //freq: this._freq,\n    //book: this._book,\n    //});\n\n    //this._completed();\n    //},\n    //(error: HttpErrorResponse) =>\n    //// console.error(`${error.status}: ${error.error}`)\n    //alert(`${error.status}: ${error.error}`)\n    //);\n  };\n}\n\nexport function chartRefresh() {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_SET_FUNCTION,\n      payload: {\n        func: \"simple\",\n      },\n    });\n  };\n}\n\nexport function chartForward() {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_SET_FUNCTION,\n      payload: {\n        func: \"forward\",\n      },\n    });\n  };\n}\n\nexport function chartBackward() {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_SET_FUNCTION,\n      payload: {\n        func: \"backward\",\n      },\n    });\n  };\n}\n\nexport function chartSetSymbol(symbol) {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_SYMBOL_REQUEST,\n      payload: {\n        func: \"slice\",\n        symbol: symbol.toLowerCase(),\n      },\n    });\n  };\n}\n\nexport function chartSetFrequency(freq) {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_FREQUENCY_REQUEST,\n      payload: {\n        func: \"simple\",\n        freq: freq,\n      },\n    });\n  };\n}\n\nexport function chartSetInputs(symbol, date, freq, book) {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_INPUTS_REQUEST,\n      payload: {\n        func: \"slice\",\n        symbol: symbol,\n        date: date,\n        freq: freq,\n        book: book,\n      },\n    });\n  };\n}\n\nexport function chartSetShowRecords(active) {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_RECORDS_REQUEST,\n      payload: {\n        func: \"simple\",\n        records: active,\n      },\n    });\n  };\n}\n\nexport function chartRandomDate() {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_RANDOM_DATE_REQUEST,\n      payload: {\n        func: \"randomDate\",\n      },\n    });\n  };\n}\n\nexport function chartSetParameters(parameters) {\n  return function (dispatch) {\n    dispatch({\n      type: CHART_PARAMETERS_REQUEST,\n      payload: {\n        func: \"slice\",\n        params: parameters,\n      },\n    });\n  };\n}\n\nexport function chartInspectRequest(x, y, ax = null, ay = null) {\n  return function (dispatch) {\n    //if (ax != null && ay != null) {\n    dispatch({\n      type: CHART_INSPECT_REQUEST,\n      payload: {\n        func: \"inspect\",\n        x: x,\n        y: y,\n        ax: ax,\n        ay: ay,\n      },\n    });\n    //} else {\n    //dispatch({\n    //type: CHART_INSPECT_REQUEST,\n    //payload: {\n    //func: \"inspect\",\n    //x: x,\n    //y: y,\n    //},\n    //});\n    //}\n  };\n\n  //let url = this._url.replace(/function=[^&]+/, \"function=inspect\");\n\n  //url = `${url}&x=${x}&y=${y}`;\n\n  //if (ax != null && ay != null) {\n  //url = `${url}&ax=${ax}&ay=${ay}`;\n  //}\n\n  //const headers = new HttpHeaders().set(\n  //\"Content-Type\",\n  //\"text/plain; charset=utf-8\"\n  //);\n\n  //if (!this._isWorking) {\n  //return this._http.get(url, { headers, responseType: \"text\" }).toPromise();\n  //} else {\n  //return \"\";\n  //}\n}\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":58,"column":6,"nodeType":"135","endLine":58,"endColumn":8,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":69,"column":6,"nodeType":"135","endLine":69,"endColumn":20,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":20},{"ruleId":"139","severity":1,"message":"143","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":20},{"ruleId":"139","severity":1,"message":"144","line":6,"column":10,"nodeType":"141","messageId":"142","endLine":6,"endColumn":26},{"ruleId":"139","severity":1,"message":"145","line":6,"column":28,"nodeType":"141","messageId":"142","endLine":6,"endColumn":41},{"ruleId":"133","severity":1,"message":"146","line":228,"column":6,"nodeType":"135","endLine":228,"endColumn":8,"suggestions":"147"},{"ruleId":"139","severity":1,"message":"148","line":174,"column":11,"nodeType":"141","messageId":"142","endLine":174,"endColumn":12},{"ruleId":"139","severity":1,"message":"149","line":179,"column":11,"nodeType":"141","messageId":"142","endLine":179,"endColumn":12},{"ruleId":"139","severity":1,"message":"150","line":190,"column":13,"nodeType":"141","messageId":"142","endLine":190,"endColumn":15},{"ruleId":"139","severity":1,"message":"151","line":196,"column":13,"nodeType":"141","messageId":"142","endLine":196,"endColumn":15},{"ruleId":"133","severity":1,"message":"137","line":412,"column":6,"nodeType":"135","endLine":424,"endColumn":4,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":103,"column":1,"nodeType":"155","endLine":108,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":37,"column":1,"nodeType":"155","endLine":114,"endColumn":2},{"ruleId":"156","severity":1,"message":"157","line":114,"column":5,"nodeType":"158","messageId":"159","endLine":151,"endColumn":10},{"ruleId":"139","severity":1,"message":"160","line":131,"column":15,"nodeType":"141","messageId":"142","endLine":131,"endColumn":18},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkError' and 'props.value'. Either include them or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["164"],"no-unused-vars","'fontButton' is defined but never used.","Identifier","unusedVar","'willChange' is defined but never used.","'horizontalMargin' is defined but never used.","'borderOutline' is defined but never used.","React Hook useEffect has missing dependencies: 'props', 'state.currentSetItems', and 'state.selectedItemIndex'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["165"],"'x' is assigned a value but never used.","'y' is assigned a value but never used.","'ax' is assigned a value but never used.","'ay' is assigned a value but never used.",["166"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'src' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [checkError, props.value]",{"range":"175","text":"176"},"Update the dependencies array to be: [value, error, props]",{"range":"177","text":"178"},"Update the dependencies array to be: [props, state.currentSetItems, state.selectedItemIndex]",{"range":"179","text":"180"},"Update the dependencies array to be: [props.chart.func, props.chart.symbol, props.chart.date, props.chart.freq, props.chart.book, props.chart.records, props.chart.x, props.chart.y, props.chart.ax, props.chart.ay, props.chart.parameters, props]",{"range":"181","text":"182"},[1354,1356],"[checkError, props.value]",[1539,1553],"[value, error, props]",[5417,5419],"[props, state.currentSetItems, state.selectedItemIndex]",[10068,10316],"[props.chart.func, props.chart.symbol, props.chart.date, props.chart.freq, props.chart.book, props.chart.records, props.chart.x, props.chart.y, props.chart.ax, props.chart.ay, props.chart.parameters, props]"]